// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kol_pop.Context;

namespace kol_pop.Mirgrations
{
    [DbContext(typeof(OrganiztionContext))]
    [Migration("20220621080308_migraje2")]
    partial class migraje2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("kol_pop.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.HasKey("FileId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("File");

                    b.HasData(
                        new
                        {
                            FileId = 1,
                            TeamId = 1,
                            FileExtension = "zip",
                            FileName = "zaliczenia",
                            FileSize = 100
                        });
                });

            modelBuilder.Entity("kol_pop.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MemberSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemmberNickName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("OrganiztionId")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.HasIndex("OrganiztionId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            MemberName = "kuba",
                            MemberSurname = "kowal",
                            MemmberNickName = "Suzin",
                            OrganiztionId = 1
                        });
                });

            modelBuilder.Entity("kol_pop.Models.Membership", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.ToTable("Membership");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            MembershipDate = new DateTime(2022, 6, 21, 10, 3, 7, 935, DateTimeKind.Local).AddTicks(1329),
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("kol_pop.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("OrganizationDomain")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organization");

                    b.HasData(
                        new
                        {
                            OrganizationId = 1,
                            OrganizationDomain = "naukowa",
                            OrganizationName = "szkola"
                        });
                });

            modelBuilder.Entity("kol_pop.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("TeamDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TeamId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            OrganizationId = 1,
                            TeamDescription = "jakies super ludzie",
                            TeamName = "kozaki"
                        });
                });

            modelBuilder.Entity("kol_pop.Models.File", b =>
                {
                    b.HasOne("kol_pop.Models.Team", "Team")
                        .WithMany("File")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("kol_pop.Models.Member", b =>
                {
                    b.HasOne("kol_pop.Models.Organization", "Organiztion")
                        .WithMany("Member")
                        .HasForeignKey("OrganiztionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organiztion");
                });

            modelBuilder.Entity("kol_pop.Models.Membership", b =>
                {
                    b.HasOne("kol_pop.Models.Member", "Member")
                        .WithMany("Membership")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kol_pop.Models.Team", "Team")
                        .WithMany("Membership")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("kol_pop.Models.Team", b =>
                {
                    b.HasOne("kol_pop.Models.Organization", "Organization")
                        .WithMany("Team")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("kol_pop.Models.Member", b =>
                {
                    b.Navigation("Membership");
                });

            modelBuilder.Entity("kol_pop.Models.Organization", b =>
                {
                    b.Navigation("Member");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("kol_pop.Models.Team", b =>
                {
                    b.Navigation("File");

                    b.Navigation("Membership");
                });
#pragma warning restore 612, 618
        }
    }
}
